[
	{
		"attribute": "",
		"expression":"cy.get('.fa-tasks').click()",
		"operation": ""
	},
	{
		"attribute": "asset_group",
		"expression":"cy.select_by_upper_label('Properties / Asset Groups',data['asset_group'],2000)",
		"operation": "select"
	},
	{
		"attribute": "",
		"expression":"cy.contains('User Types').parent().find('.Select-clear').click()",
		"operation": ""
	},
	{
		"attribute": "user_type1",
		"expression":"cy.select_by_upper_label('User Types',data['user_type1'],1000)",
		"operation": ""
	},
	{
		"attribute": "user_type2",
		"expression":"cy.select_by_upper_label('User Types',data['user_type2'],1000)",
		"operation": ""
	},
	{
		"attribute": "user_type3",
		"expression":"cy.select_by_upper_label('User Types',data['user_type3'],1000)",
		"operation": ""
	},
	{
		"attribute": "user_type4",
		"expression":"cy.select_by_upper_label('User Types',data['user_type4'],1000)",
		"operation": ""
	},
        {
                "attribute": "show_calendar_for",
                "expression": "cy.contains('label','Show Calendar For').parent().find('button').contains(data['show_calendar_for']).click({froce:true})",
                "operation": "select"
        },
        {
                "attribute": "",
                "expression": "cy.get('.task-assignment__body-inner-left').contains('label','Show Calendar From').parent().find('.input-group-addon').click({force:true})",
                "operation": "click date picker"
        },
        {
                "attribute": "",
                "expression": "cy.get('.datepicker').find('tbody').find('tr').last().find('td').last().click({force:true})",
                "operation": "select future date"
        },
        {
                "attribute": "show_non_scheduled_task",
                "expression": "cy.select_by_checkbox(data['show_non_scheduled_task'])",
                "operation": "check"
        },
        {
                "attribute": "view",
                "expression": "cy.select_without_type('View',data['view'],'.task-assignment__body-inner-left')",
                "operation": "select"
        },
        {
                "attribute": "",
                "expression": "cy.get('#task-assignment-from-filter-filter-button').click()",
                "operation": ""
        },
        {
                "attribute": "",
                "expression":"cy.wait(3000)",
                "operation": ""
        },
        {
                "attribute": "",
                "expression":"cy.get('.confirm').click()",
                "operation": ""
        },
        {
                "attribute": "",
                "expression":"cy.visit('/work_orders')",
                "operation": ""
        },
        {
                "attribute": "",
                "expression":"cy.wait(3000)",
                "operation": ""
        },
        {
		"attribute": "",
		"expression":"cy.get('.fa-filter').click()",
		"operation": "click"
	},
        {
                "attribute": "wo_title",
                "expression":"cy.get('input[placeholder=\"WO Title / Item Name\"]')",
                "operation": "input"
        },
	{
		"attribute": "",
		"expression":"cy.contains('button','Search').click()",
		"operation": "click"
	},
	{
		"attribute": "",
		"expression":"cy.wait(5000)",
		"operation": ""
	},
	{
		"attribute": "",
		"expression":"cy.get('.media').first().click()",
		"operation": "click"
	},
	{
		"attribute": "",
		"expression": "cy.wait(5000)",
		"operation": ""
	},
	{
		"attribute": "",
		"expression": "cy.contains('.document-action-buttons > button','Edit').click()",
		"operation": "click"
	},
	{
		"attribute": "assignie",
		"expression":"cy.select_by_label('ASSIGNEE:',data['assignie'],3000)",
		"operation": ""
	},
	{
		"attribute": "",
		"expression": "cy.get('#scheduled-start-datetime').click()",
		"operation": "click"
	},
	{
		"attribute": "start_time",
		"expression":"cy.get('div.react-datepicker__time').find('li.react-datepicker__time-list-item').contains(data['start_time']).type('{enter}')",
		"operation": "click"
	},
	{
		"attribute": "",
		"expression": "cy.get('#scheduled-end-datetime').click({force:true})",
		"operation": "click"
	},
	{
		"attribute": "end_time",
		"expression": "cy.get('div.react-datepicker__time').find('li.react-datepicker__time-list-item').contains(data['end_time']).type('{enter}')",
		"operation": "click"
	},
	{
		"attribute": "",
		"expression":"cy.get('.btn-toolbar > .btn-info').click()",
		"operation": ""
	}
]