[
        {
                "attribute": "title",
                "expression": "cy.get('#title')",
                "operation": "input"
        },
        {
                "attribute": "due_date",
                "expression": "cy.select_by_calendar('#due-date', data['due_date'])",
                "operation": "select"
        },
        {
                "attribute": "end_date",
                "expression": "cy.select_by_calendar('#contract-term-ends', data['end_date'])",
                "operation": "select"
        },    
        {
                "attribute": "start_date",
                "expression": "cy.select_by_calendar('#schedule-start-date', data['start_date'])",
                "operation": "select"
        },

        {
                "attribute": "",
                "expression": "cy.wait(3000)",
                "operation": ""
        },
        {
                "attribute": "customer",
                "expression": "cy.get('#supplier-name')",
                "operation": "input"
        },
        {
                "attribute": "",
                "expression": "cy.wait(6000)",
                "operation": ""
        },
        {
                "attribute": "",
                "expression": "cy.get('#supplier-name').type('{enter}',' { force: true }')",
                "operation": ""
        },
        {
                "attribute": "",
                "expression": "cy.wait(8000)",
                "operation": ""
        },
        {
                "attribute": "",
                "expression": "cy.on('uncaught:exception', (err, runnable) => { return false })",
                "operation": ""
        },
        {
                "attribute": "property",
                "expression": "cy.select_by_label_with_enter('REG / PROP COVERAGE:',data['property'],0)",
                "operation": "select"
        },
        {
                "attribute": "",
                "expression": "cy.wait(6000)",
                "operation": ""
        },
        {
                "attribute": "requester",
                "expression": "cy.select_by_label_with_enter('REQUESTER:',data['requester'],0)",
                "operation": "select"
        },
        {
                "attribute": "suplier_contract_name",
                "expression": "cy.get('input[placeholder=\"Supplier Contract#\"]').type(data['suplier_contract_name'])",
                "operation": "select"
        },
        {
                "attribute": "",
                "expression": "cy.wait(2000)",
                "operation": ""
        },
        {
                "attribute": "product",
                "expression": "cy.get('#product-typeahed').type(data['product'],{ force: true })",
                "operation": ""
        },
        {
                "attribute": "quantity",
                "expression": "cy.get('input[placeholder=\"Quantity\"]').type(data['quantity'],{ force: true })",
                "operation": ""
        },
        {
                "attribute": "unit_price",
                "expression": "cy.get('input[placeholder=\"Unit Price\"]').type(data['unit_price'],{ force: true })",
                "operation": ""
        },   
        {
                "attribute": "measurement",
                "expression": "cy.select_by_placeholder('--- Unit of Measurement ---',data['measurement'],0)",
                "operation": "select"
        },
        {
                "attribute": "property0",
                "expression": "cy.select_by_placeholder_using_selector('Property',data['property0'],0)",
                "operation": "select"
        },
        {
                "attribute": "item_sku",
                "expression": "cy.get('input[placeholder=\"Item SKU\"]').type(data['item_sku'],{ force: true })",
                "operation": ""
        }, 
        {
                "attribute": "tax",
                "expression": "cy.get('input[name=\"quote[tax_amount]\"]')",
                "operation": "input"
        },
        {
                "attribute": "",
                "expression": "cy.get('button.btn.btn-success').contains('Save').click()",
                "operation": "click"
        },
        {
                "attribute": "",
                "expression": "cy.contains('button','Add Line Item').click();",
                "operation": "click"
        },
        {
                "attribute": "product1",
                "expression": "cy.get('#product-typeahed').type(data['product1'],{ force: true })",
                "operation": ""
        },
        {
                "attribute": "quantity1",
                "expression": "cy.get('input[placeholder=\"Quantity\"]').type(data['quantity1'],{ force: true })",
                "operation": ""
        },
        {
                "attribute": "unit_price1",
                "expression": "cy.get('input[placeholder=\"Unit Price\"]').type(data['unit_price1'],{ force: true })",
                "operation": ""
        },   
        {
                "attribute": "measurement1",
                "expression": "cy.select_by_placeholder('--- Unit of Measurement ---',data['measurement1'],0)",
                "operation": "select"
        },
        {
                "attribute": "property1",
                "expression": "cy.select_by_placeholder_using_selector('Property',data['property1'],0)",
                "operation": "select"
        },
        {
                "attribute": "item_sku1",
                "expression": "cy.get('input[placeholder=\"Item SKU\"]').type(data['item_sku1'],{ force: true })",
                "operation": ""
        },
        {
                "attribute": "tax1",
                "expression": "cy.get('input[name=\"quote[tax_amount]\"]')",
                "operation": "input"
        },
        {
                "attribute": "",
                "expression": "cy.get('button.btn.btn-success').contains('Save').click()",
                "operation": "click"
        },
        {
                "attribute": "",
                "expression": "cy.wait(2000)",
                "operation": ""
        },
        {
                "attribute": "",
                "expression": "cy.contains(\"Items SKU can't be duplicate\").should('exist')",
                "operation": ""
        }
]
    

    